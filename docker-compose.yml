# sudo docker start
# sudo docker-compose down
# sudo docker-compose build --no-cache
# sudo docker-compose up --scale backend=2

version: "3"
services:
  frontend:
    container_name: mern_web
    build:
      context: ./client
      dockerfile: Dockerfile
      # dockerfile: Dockerfile.dev # for development
      args:
        REACT_PORT: ${REACT_PORT}
    image: sylee/mern_web
    ports:
      - "${REACT_PORT}:${REACT_PORT}"
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - backend
    environment:
      - REACT_PORT=${REACT_PORT}
    # networks:
    #   - mern-network
    env_file:
      - .env

  # execute with sudo docker-compose up --scale backend=SERVER_NUM for load balancing
  backend:
    # container_name: mern_server
    build:
      context: ./server
      dockerfile: Dockerfile
      # dockerfile: Dockerfile.dev # for development
      args:
        NODE_PORT: ${NODE_PORT}
    image: sylee/mern_server
    # ports:
    #   - "${NODE_PORT}:${NODE_PORT}"
    expose:
      - "${NODE_PORT}" # set only internal ports of backend containers for load balancing
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongodb
    environment:
      - NODE_PATH=src
      - NODE_ENV=production
    env_file:
      - .env
    # networks:
    #   - mern-network

  nginx:
    container_name: mern_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
      # dockerfile: Dockerfile.dev # for development
    image: sylee/mern_nginx
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/mern.conf
      # - ./nginx/nginx.dev.conf:/etc/nginx/mern.dev.conf # for development
      - ./client/dist:/var/www # 리액트를 웹팩으로 빌드(컴파일)한 폴더를 nginx의 root 폴더인 /var/www 로 맵핑해서 정적파일을 로드함
    # networks:
    #   - mern-network
    depends_on: # nginx가 host(frontend, backend)를 인식할 수 있기 위함
      - frontend
      - backend
    environment:
      - NODE_PORT=${NODE_PORT}
      - REACT_PORT=${REACT_PORT}
      - NGINX_PORT=${NGINX_PORT}

  mongodb:
    container_name: mern_mongo
    image: mongo
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - mongo:/data/db # volumes를 만들어두지 않으면 컨테이너가 매번 종료될 때마다 데이터가 초기화됨
# networks:
#   mern-network:
#     driver: bridge

volumes: # mongodb 데이터
  mongo:
